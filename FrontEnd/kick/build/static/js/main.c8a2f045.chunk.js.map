{"version":3,"sources":["Components/History.jsx","api/api.jsx","Actions/AuthenticationAction.jsx","Components/NavigationBar.jsx","Components/Page.jsx","Pages/CreatePost.jsx","Components/Post.jsx","Components/Feed.jsx","Components/Time.jsx","Components/LikeNotification.jsx","Components/FollowingNotification.jsx","Components/Dashboard.jsx","Pages/Home.jsx","Pages/LogIn.jsx","Components/PrivateRoute.jsx","Pages/Registration.jsx","Pages/Explore.jsx","Pages/Message.jsx","Components/UserCard.jsx","Components/UserFeed.jsx","Pages/Search.jsx","Pages/UserPage.jsx","Pages/FollowersPage.jsx","Pages/InfluencersPage.jsx","Pages/PostPage.jsx","Components/NoMatch.jsx","App.js","serviceWorker.js","Reducers/AuthenticationReducer.jsx","store.jsx","index.js","logo.svg"],"names":["createBrowserHistory","axios","create","baseURL","headers","Authorization","localStorage","logout","type","NavigationBar","Navbar","bg","expand","fixed","Brand","href","src","logo","width","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","personCircle","Button","onClick","this","props","Component","mapDispatchToProps","connect","state","loggedIn","Page","Container","fluid","Row","Col","lg","leftComponent","Fragment","middleComponent","rightComponent","CreatePost","image","caption","city","country","handleFileSubmit","event","preventDefault","setState","URL","createObjectURL","target","files","onChange","e","name","value","onPostSubmit","data","imageURL","postDate","Date","API","method","url","then","response","console","log","history","push","window","location","reload","catch","error","handleLogout","Form","xs","md","Group","controlId","Image","roundedCircle","File","label","accept","Label","Control","placeholder","variant","Post","comment","onLike","liked","handleUserUnLiked","post","handleUserLiked","onCommentChange","onCommentSubmit","handleUserCommented","setComments","comments","displayComments","length","Card","Header","to","username","Img","Body","heartFill","heart","chat","Title","likes","map","index","Text","key","Subtitle","InputGroup","FormControl","aria-label","aria-describedby","Append","Feed","feed","update","privateProfile","createFeed","feedURL","content","noPost","requests","handleWhichUserLiked","Promise","all","values","like","handlePostUpdated","newPost","postId","isLiked","newIndex","modified","Time","convertTime","time","dif","Math","abs","floor","LikeNotification","show","handleClose","notification","thePostId","Toast","onClose","userLiked","FollowingNotification","deleteCall","handleAccept","theFollowingId","handleDelete","personFill","following","align","size","Dashboard","likeNotifications","followingNotifications","createNotifications","sort","a","b","concat","prevProps","meUser","Home","SignIn","password","failed","handleAuthentication","bind","handleChange","login","evt","activeKey","Item","dispatch","setItem","authorization","PrivateRoute","component","rest","render","pathname","from","Registration","handleRegistration","as","Check","Explore","Message","UserCard","checkFollowing","user","handleFollow","handleDeleteFollow","meUsername","createFollowingBanner","Badge","pill","checkActualFollowerCount","followers","count","follower","accepted","followerWord","whereIsInfluencer","Jumbotron","whereIsFollower","firstName","lastName","biography","UserFeed","Search","search","selectedOption","searchTerm","onRadioToggle","checked","UserPage","match","params","FollowersPage","InfluencersPage","PostPage","getPost","NoMatch","App","path","exact","Boolean","hostname","AuthenciationReduer","loggingIn","action","removeItem","createStore","AuthenticationReducer","applyMiddleware","logger","thunk","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.c8a2f045.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../Actions/AuthenticationAction\";\r\n\r\nexport default axios.create({\r\n  baseURL: `https://quiet-inlet-83310.herokuapp.com/`,\r\n  headers: {\r\n    Authorization: localStorage[\"Authorization\"],\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// const defaultAxios = axios.create({\r\n//   baseURL: `https://quiet-inlet-83310.herokuapp.com/`,\r\n//   headers: {\r\n//     Authorization: localStorage[\"Authorization\"],\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n// });\r\n\r\n// defaultAxios.interceptors.response.use(\r\n//   function (response) {\r\n//     // Any status code that lie within the range of 2xx cause this function to trigger\r\n//     // Do something with response data\r\n//     return response;\r\n//   },\r\n//   function (error) {\r\n//     // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n//     // Do something with response error\r\n//     console.log(\"Http error: \", error);\r\n//     if (this.props.loggedIn) {\r\n//       console.log(\"logged in\");\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     loggedIn: state.loggedIn,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   logout,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(defaultAxios);\r\n","import history from \"../Components/History\";\r\nimport API from \"../api/api\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n}\r\n\r\nexport const LOGGING_IN = \"LOGGING IN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN SUCCESSFUL\";\r\nexport const LOGIN_FAIL = \"LOGIN FAILED\";\r\n\r\nexport function login(username, password) {\r\n  return (dispatch) => {\r\n    dispatch({ type: LOGGING_IN });\r\n\r\n    API({\r\n      method: \"post\",\r\n      url: \"/login\",\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n      headers: {},\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch({ type: LOGIN_SUCCESS });\r\n        localStorage.setItem(\"user\", username);\r\n        localStorage.setItem(\"Authorization\", response.headers.authorization);\r\n\r\n        history.push(\"/\");\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({ type: LOGIN_FAIL });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\n\r\nimport personCircle from \"bootstrap-icons/icons/person-circle.svg\";\r\nimport logo from \"../logo.svg\";\r\nimport { logout } from \"../Actions/AuthenticationAction\";\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap logo\"\r\n          />{\" \"}\r\n          Kick\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n            <Nav.Link href=\"/message\">Message</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/explore\">Explore</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/search\">Search</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/create-post\">Create Post</Nav.Link>\r\n          </Nav>\r\n\r\n          <Nav className=\"ml-auto\">\r\n            <Navbar.Brand href=\"/user/me\">\r\n              <img\r\n                src={personCircle}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"React Bootstrap logo\"\r\n              />\r\n            </Navbar.Brand>\r\n            <Button onClick={this.props.logout}>Sign Out</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Page extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col lg=\"3\"></Col>\r\n            {this.props.leftComponent ? (\r\n              this.props.leftComponent\r\n            ) : (\r\n              <React.Fragment />\r\n            )}\r\n            <Col lg=\"6\">\r\n              {this.props.middleComponent ? (\r\n                this.props.middleComponent\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </Col>\r\n            <Col lg=\"3\" className=\"Sidebar sticky-top\">\r\n              {this.props.rightComponent ? (\r\n                this.props.rightComponent\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport history from \"../Components/History\";\r\n\r\nclass CreatePost extends Component {\r\n  state = { image: \"\", caption: \"\", city: \"\", country: \"\" };\r\n\r\n  handleFileSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ image: URL.createObjectURL(event.target.files[0]) });\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onPostSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = {\r\n      caption: this.state.caption,\r\n      imageURL: \"inDevelopment.com\",\r\n      city: this.state.city,\r\n      country: this.state.country,\r\n      postDate: new Date(),\r\n    };\r\n\r\n    API({\r\n      method: \"post\",\r\n      url: \"api/posts\",\r\n      data: data,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        history.push(\"/\");\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.props.handleLogout();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let { caption, city, country } = this.state;\r\n\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <Form>\r\n            <Col>\r\n              <Row xs=\"6\" md=\"3\" lg=\"1\">\r\n                <Form.Group controlId=\"formImage\">\r\n                  <Image src={this.state.image} roundedCircle fluid />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formFile\">\r\n                  <Form.File\r\n                    id=\"formFileImageUpload\"\r\n                    label=\"Upload a local image\"\r\n                    onChange={this.handleFileSubmit}\r\n                    type=\"file\"\r\n                    accept=\".jpg, .png, .jpeg\"\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formCaption\">\r\n                  <Form.Label>Caption</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a caption\"\r\n                    name=\"caption\"\r\n                    value={caption}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formLocation\">\r\n                  <Form.Label>Location</Form.Label>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        name=\"city\"\r\n                        value={city}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Country\"\r\n                        name=\"country\"\r\n                        value={country}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.onPostSubmit}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n          </Form>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, Button, Image, FormControl, InputGroup } from \"react-bootstrap\";\r\nimport heart from \"bootstrap-icons/icons/heart.svg\";\r\nimport heartFill from \"bootstrap-icons/icons/heart-fill.svg\";\r\nimport chat from \"bootstrap-icons/icons/chat.svg\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    comment: \"\",\r\n  };\r\n\r\n  onLike = () => {\r\n    // if not liked, like, otherwise unlike\r\n    if (!this.props.liked) {\r\n      this.props.handleUserLiked(this.props.post.id);\r\n    } else {\r\n      this.props.handleUserUnLiked(this.props.post.id);\r\n    }\r\n  };\r\n\r\n  onCommentChange = (event) => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onCommentSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.comment);\r\n    this.props.handleUserCommented(this.props.post.id, this.state.comment);\r\n  };\r\n\r\n  setComments = () => {\r\n    let comments = this.props.post.comments;\r\n    let displayComments = [\"\"];\r\n    if (comments.length !== 0) {\r\n      displayComments = [comments[comments.length - 1].comment];\r\n    }\r\n\r\n    return displayComments;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Link to={`/user/${this.props.post.username}`}>\r\n            {this.props.post.username}\r\n          </Link>\r\n        </Card.Header>\r\n        <Card.Img variant=\"top\" src={logo} />\r\n        <Card.Body>\r\n          <Button variant=\"link\" onClick={this.onLike}>\r\n            {this.props.liked ? (\r\n              <Image src={heartFill} alt=\"\" />\r\n            ) : (\r\n              <Image src={heart} alt=\"\" />\r\n            )}\r\n          </Button>\r\n          <Button variant=\"link\">\r\n            <img src={chat} alt=\"\" />\r\n          </Button>\r\n          <Card.Title>{this.props.post.likes.length} likes</Card.Title>\r\n          {this.setComments().map((comment, index) => (\r\n            <Card.Text key={index}>{comment}</Card.Text>\r\n          ))}\r\n          <Card.Text>{this.props.post.caption}</Card.Text>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {this.props.post.city}, {this.props.post.country}\r\n          </Card.Subtitle>\r\n          <footer>{this.props.post.postDate}</footer>\r\n        </Card.Body>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Add a comment...\"\r\n            aria-label=\"Comment\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={this.onCommentChange}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"outline-secondary\" onClick={this.onCommentSubmit}>\r\n              Post\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\nimport API from \"../api/api\";\r\n\r\nclass Feed extends Component {\r\n  state = { feed: [], liked: [], update: false, privateProfile: false };\r\n\r\n  componentDidMount() {\r\n    this.createFeed();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.setState({ update: true });\r\n    }\r\n  }\r\n\r\n  createFeed = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: this.props.feedURL,\r\n    })\r\n      .then((response) => {\r\n        let feed = response.data.content;\r\n        this.setState({ feed });\r\n\r\n        if (response.data === \"Not following or public\") {\r\n          this.setState({ noPost: true });\r\n        }\r\n\r\n        return feed;\r\n      })\r\n      .then((feed) => {\r\n        let requests = feed.map((post) => this.handleWhichUserLiked(post));\r\n        Promise.all(requests).then((values) => {\r\n          let liked = values.map((like) => like.data);\r\n          this.setState({ liked });\r\n          this.setState({ update: false });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({ update: false });\r\n      });\r\n  };\r\n\r\n  handleWhichUserLiked = (post) => {\r\n    return API({\r\n      method: \"get\",\r\n      url: `api/posts/${post.id}/liked`,\r\n    });\r\n  };\r\n\r\n  handlePostUpdated = (newPost, postId, isLiked) => {\r\n    // replace the corresponding post with the new one\r\n    let feed = this.state.feed;\r\n    let liked = this.state.liked;\r\n    let newIndex = 0;\r\n\r\n    let modified = feed.map((post, index) => {\r\n      if (post.id === postId) {\r\n        console.log(\"mathicng postId\", postId);\r\n        console.log(\"matching index\", index);\r\n        newIndex = index;\r\n        return newPost;\r\n      } else {\r\n        return post;\r\n      }\r\n    });\r\n\r\n    if (isLiked !== \"comment\") {\r\n      liked[newIndex] = isLiked;\r\n    }\r\n\r\n    this.setState({ feed: modified });\r\n    this.setState({ liked });\r\n  };\r\n\r\n  handleUserLiked = (postId) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.handlePostUpdated(response.data, postId, true);\r\n    });\r\n  };\r\n\r\n  handleUserUnLiked = (postId) => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.handlePostUpdated(response.data, postId, false);\r\n    });\r\n  };\r\n\r\n  handleUserCommented = (postId, comment) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/commentPosts`,\r\n      data: comment,\r\n    }).then((response) => {\r\n      // replace the corresponding post with the new one\r\n      this.handlePostUpdated(response.data, postId, \"comment\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.update) {\r\n      this.createFeed();\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.feed ? (\r\n          this.state.feed.map((post, index) => (\r\n            <Post\r\n              key={post.id}\r\n              id={post.id}\r\n              post={post}\r\n              liked={this.state.liked[index]}\r\n              handleUserCommented={this.handleUserCommented}\r\n              handleUserLiked={this.handleUserLiked}\r\n              handleUserUnLiked={this.handleUserUnLiked}\r\n            ></Post>\r\n          ))\r\n        ) : this.state.privateProfile ? (\r\n          <h1>No posts</h1>\r\n        ) : (\r\n          <h1>Private profile</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Time extends Component {\r\n  convertTime = (time) => {\r\n    let dif = Math.abs(time - new Date()) / 86400000;\r\n\r\n    if (dif < 1) {\r\n      return \"Today\";\r\n    } else {\r\n      return Math.floor(dif) + \"days ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.convertTime(this.props.time)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Time;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../api/api\";\r\n\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport heartFill from \"bootstrap-icons/icons/heart-fill.svg\";\r\nimport Time from \"./Time\";\r\n\r\nclass LikeNotification extends Component {\r\n  state = { show: true };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/likeNotifications/single/${this.props.notification.thePostId}`,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Toast show={this.state.show} onClose={this.handleClose}>\r\n        <Toast.Header>\r\n          <img src={heartFill} className=\"rounded mr-2\" alt=\"\" />\r\n          <strong className=\"mr-auto\">\r\n            <Link to={`/user/${this.props.notification.userLiked}`}>\r\n              {this.props.notification.userLiked}\r\n            </Link>{\" \"}\r\n            liked your{\" \"}\r\n            <Link to={`/post/${this.props.notification.thePostId}`}>post</Link>\r\n          </strong>\r\n          <small>\r\n            <Time time={this.props.notification.time} />\r\n          </small>\r\n        </Toast.Header>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LikeNotification;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../api/api\";\r\n\r\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\r\nimport personFill from \"bootstrap-icons/icons/person-fill.svg\";\r\nimport Time from \"./Time\";\r\n\r\nclass FollowingNotification extends Component {\r\n  state = { show: true };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.deleteCall();\r\n  };\r\n\r\n  deleteCall = () => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/followingNotifications/single/${this.props.notification.id}`,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  handleAccept = () => {\r\n    this.setState({ show: false });\r\n    API({\r\n      method: \"post\",\r\n      url: `/api/followings/${this.props.notification.theFollowingId}/true`,\r\n    })\r\n      .then(() => {\r\n        this.deleteCall();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.setState({ show: false });\r\n    this.deleteCall();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Toast show={this.state.show} onClose={this.handleClose}>\r\n        <Toast.Header>\r\n          <img src={personFill} className=\"rounded mr-2\" alt=\"\" />\r\n          <strong className=\"mr-auto\">\r\n            <Link to={`/user/${this.props.notification.following}`}>\r\n              {this.props.notification.following}\r\n            </Link>{\" \"}\r\n            wants to follow you\r\n          </strong>\r\n          <small>\r\n            <Time time={this.props.notification.time} />\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Row>\r\n            <Col align=\"right\">\r\n              <Button onClick={this.handleAccept} size=\"sm\">\r\n                Accept\r\n              </Button>\r\n            </Col>\r\n            <Col align=\"left\">\r\n              <Button\r\n                onClick={this.handleDelete}\r\n                variant=\"outline-warning\"\r\n                size=\"sm\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowingNotification;\r\n","import React, { Component } from \"react\";\r\nimport LikeNotification from \"./LikeNotification\";\r\nimport FollowingNotification from \"./FollowingNotification\";\r\nclass Dashboard extends Component {\r\n  state = { likeNotifications: [], followingNotifications: [] };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.meUser !== prevProps.meUser) {\r\n      console.log(\"dashboard props\", this.props.meUser);\r\n      this.setState({ likeNotifications: this.props.meUser.likeNotifications });\r\n      this.setState({\r\n        followingNotifications: this.props.meUser.followingNotifications,\r\n      });\r\n    }\r\n  }\r\n\r\n  createNotifications = () => {\r\n    let likeNotifications = this.state.likeNotifications.map(\r\n      (notification, index) => (\r\n        <LikeNotification key={index} notification={notification} />\r\n      )\r\n    );\r\n\r\n    let followingNotifications = this.state.followingNotifications.map(\r\n      (notification, index) => (\r\n        <FollowingNotification\r\n          key={index + likeNotifications.length}\r\n          notification={notification}\r\n        />\r\n      )\r\n    );\r\n\r\n    let sort = function (a, b) {\r\n      return a.time < b.time ? -1 : a.time === b.time ? 0 : 1;\r\n    };\r\n\r\n    likeNotifications.sort(sort);\r\n    followingNotifications.sort(sort);\r\n\r\n    let allNotificationComponents = followingNotifications.concat(\r\n      likeNotifications\r\n    );\r\n\r\n    return allNotificationComponents;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sticky-top overflow-auto\">\r\n        <h1>Dashboard</h1>\r\n        {this.createNotifications()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Feed from \"../Components/Feed\";\r\nimport Dashboard from \"../Components/Dashboard\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col lg=\"3\"></Col>\r\n            <Col lg=\"6\">\r\n              <Feed feedURL=\"api/posts/feed\" />\r\n            </Col>\r\n            <Col lg=\"3\" className=\"Sidebar sticky-top\">\r\n              <Dashboard meUser={this.props.meUser} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Nav } from \"react-bootstrap\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport { login } from \"../Actions/AuthenticationAction\";\r\n\r\nclass SignIn extends Component {\r\n  state = { username: \"\", password: \"\", failed: false };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  async handleAuthentication(e) {\r\n    e.preventDefault();\r\n    console.log(\"username\", this.state.username);\r\n    console.log(\"username\", this.state.password);\r\n    this.props.login(this.state.username, this.state.password);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    const value = evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"username\"\r\n                  placeholder=\"Enter username\"\r\n                  onChange={this.handleChange}\r\n                  name=\"username\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  name=\"password\"\r\n                />\r\n              </Form.Group>\r\n              {this.state.failed === true ? (\r\n                <Form.Text className=\"text-muted\">\r\n                  The username or password you provided was incorrect\r\n                </Form.Text>\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={this.handleAuthentication}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n\r\n            <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n              <Nav.Item>\r\n                <Nav.Link href=\"/register\">\r\n                  Don't have an account? Create one\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage[\"Authorization\"] ? (\r\n          <Component {...rest} {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/sign-in\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport history from \"../Components/History\";\r\n\r\nclass Registration extends Component {\r\n  state = {};\r\n\r\n  handleRegistration = () => {\r\n    localStorage.setItem(\"user\", \"username\");\r\n    localStorage.setItem(\"Authorization\", \"password\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridAddress1\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control placeholder=\"1234 Main St\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridAddress2\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridCity\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control as=\"select\" value=\"Choose...\">\r\n                  <option>Choose...</option>\r\n                  <option>...</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridZip\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={this.handleRegistration}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\n\r\nclass Explore extends Component {\r\n  state = {};\r\n  render() {\r\n    return <Page middleComponent={<h1>Explore</h1>} />;\r\n  }\r\n}\r\n\r\nexport default Explore;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\n\r\nclass Message extends Component {\r\n  state = {};\r\n  render() {\r\n    return <Page middleComponent={<h1>Message</h1>} />;\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Badge,\r\n  Jumbotron,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport logo from \"../logo.svg\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nclass UserCard extends Component {\r\n  state = { following: \"not following\" };\r\n\r\n  componentDidMount() {\r\n    this.checkFollowing();\r\n  }\r\n\r\n  checkFollowing = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/followings/check/${this.props.user.username}`,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Following\", response);\r\n        this.setState({ following: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleFollow = () => {\r\n    API({\r\n      method: \"post\",\r\n      url: `/api/followings/${this.props.user.username}`,\r\n    })\r\n      .then(() => {\r\n        this.checkFollowing();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleDeleteFollow = () => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/followings/follower/deleting/influencer/${this.props.meUsername}/${this.props.user.username}`,\r\n    })\r\n      .then(() => {\r\n        this.checkFollowing();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  createFollowingBanner = () => {\r\n    if (this.props.meUsername === this.props.user.username) {\r\n      return (\r\n        <Badge pill variant=\"primary\">\r\n          You!\r\n        </Badge>\r\n      );\r\n    }\r\n\r\n    if (this.state.following === \"following\") {\r\n      return (\r\n        <Button onClick={this.handleDeleteFollow} size=\"sm\">\r\n          UnFollow\r\n        </Button>\r\n      );\r\n    } else if (this.state.following === \"requested following\") {\r\n      return <Badge pill>Requested</Badge>;\r\n    } else {\r\n      return (\r\n        <Button onClick={this.handleFollow} size=\"sm\">\r\n          Follow\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  checkActualFollowerCount = (followers) => {\r\n    let count = 0;\r\n\r\n    followers.map((follower) => {\r\n      if (follower.accepted) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  };\r\n\r\n  render() {\r\n    let followerWord = \"Followers\";\r\n    if (\r\n      this.props.user.whereIsInfluencer &&\r\n      this.props.user.whereIsInfluencer.length === 1\r\n    ) {\r\n      followerWord = \"Follower\";\r\n    }\r\n\r\n    console.log(\"User card\", this.props.user);\r\n\r\n    return (\r\n      <Jumbotron>\r\n        <Image\r\n          src={logo}\r\n          width=\"75\"\r\n          height=\"75\"\r\n          className=\"d-inline-block center\"\r\n          alt=\"React Bootstrap logo\"\r\n        />\r\n        <Link to={`/user/${this.props.user.username}`}>\r\n          {this.props.user.username}\r\n        </Link>\r\n        {\"    \"}\r\n        {!this.props.user.privateProfile ? (\r\n          <Badge pill variant=\"success\">\r\n            Public\r\n          </Badge>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Badge pill variant=\"warning\">\r\n              Private\r\n            </Badge>\r\n          </React.Fragment>\r\n        )}\r\n        {\"    \"}\r\n        {this.createFollowingBanner()}\r\n        <div>\r\n          {this.props.user.city}, {this.props.user.country}\r\n        </div>\r\n        <Container>\r\n          <Row>\r\n            <Col align=\"right\">\r\n              {this.props.user.whereIsInfluencer ? (\r\n                <Link to={`/followers/${this.props.user.username}`}>\r\n                  {this.checkActualFollowerCount(\r\n                    this.props.user.whereIsInfluencer\r\n                  )}{\" \"}\r\n                  {followerWord}\r\n                </Link>\r\n              ) : (\r\n                \"0 Followers\"\r\n              )}\r\n            </Col>\r\n            <Col align=\"left\">\r\n              {this.props.user.whereIsFollower ? (\r\n                <Link to={`/influencers/${this.props.user.username}`}>\r\n                  {this.checkActualFollowerCount(\r\n                    this.props.user.whereIsFollower\r\n                  )}{\" \"}\r\n                  Following\r\n                </Link>\r\n              ) : (\r\n                \"0 Following\"\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <hr className=\"hr-line\" />\r\n        <p className=\"less-margin\">\r\n          <b>\r\n            {this.props.user.firstName} {this.props.user.lastName}\r\n          </b>\r\n        </p>\r\n        <p className=\"less-margin\">{this.props.user.biography}</p>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport API from \"../api/api\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nclass UserFeed extends Component {\r\n  state = { feed: [], update: false };\r\n\r\n  componentDidMount() {\r\n    this.createFeed();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.setState({ update: true });\r\n    }\r\n  }\r\n\r\n  createFeed = () => {\r\n    console.log(\"props\", this.props.feedURL);\r\n    API({\r\n      method: \"get\",\r\n      url: this.props.feedURL,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"User feed response\", response);\r\n        let feed = response.data.content;\r\n        this.setState({ feed });\r\n        this.setState({ update: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.update) {\r\n      this.createFeed();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.feed.map((user) => (\r\n          <UserCard user={user} meUsername={this.props.meUser.username} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport Feed from \"../Components/Feed\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    search: \"\",\r\n    selectedOption: \"userToggle\",\r\n  };\r\n\r\n  searchTerm = (search) => {\r\n    return \"?search=\" + search;\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onRadioToggle = (e) => {\r\n    this.setState({ selectedOption: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state\", this.state);\r\n\r\n    let { search } = this.state;\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <Row className=\"sticky-top\">\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder=\"Search...\"\r\n                  aria-label=\"Search...\"\r\n                  aria-describedby=\"search\"\r\n                  name=\"search\"\r\n                  value={search}\r\n                  onChange={this.onChange}\r\n                />\r\n              </InputGroup>\r\n            </Row>\r\n            <Row>\r\n              <Col align=\"right\">\r\n                <Form.Check\r\n                  label=\"Users\"\r\n                  type=\"radio\"\r\n                  id=\"user-radio\"\r\n                  value=\"userToggle\"\r\n                  onChange={this.onRadioToggle}\r\n                  checked={this.state.selectedOption === \"userToggle\"}\r\n                />\r\n              </Col>\r\n              <Col align=\"left\">\r\n                <Form.Check\r\n                  label=\"Posts\"\r\n                  type=\"radio\"\r\n                  id=\"post-radio\"\r\n                  value=\"postToggle\"\r\n                  onChange={this.onRadioToggle}\r\n                  checked={this.state.selectedOption === \"postToggle\"}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {(this.state.search !== \"\") &\r\n            (this.state.selectedOption === \"postToggle\") ? (\r\n              <Feed feedURL={`/api/posts/search?search=${this.state.search}`} />\r\n            ) : (\r\n              <React.Fragment></React.Fragment>\r\n            )}\r\n            {(this.state.search !== \"\") &\r\n            (this.state.selectedOption === \"userToggle\") ? (\r\n              <UserFeed\r\n                feedURL={`/api/applicationUsers/search?search=username:*${this.state.search}*`}\r\n                meUser={this.props.meUser}\r\n              />\r\n            ) : (\r\n              <React.Fragment></React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Feed from \"../Components/Feed\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nclass UserPage extends Component {\r\n  state = { user: [] };\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.username !== \"me\") {\r\n      API({\r\n        method: \"get\",\r\n        url: `/api/applicationUsers/username/${this.props.match.params.username}`,\r\n      })\r\n        .then((response) => {\r\n          console.log(\"user profile fetch\", response);\r\n          let user = response.data;\r\n          this.setState({ user });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            {this.props.match.params.username === \"me\" ? (\r\n              <React.Fragment>\r\n                <UserCard user={this.props.meUser} />\r\n                <Feed\r\n                  feedURL={\"/api/posts/user/\" + this.props.meUser.username}\r\n                />\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <UserCard\r\n                  user={this.state.user}\r\n                  meUsername={this.props.meUser.username}\r\n                />\r\n                <Feed\r\n                  feedURL={\r\n                    \"/api/posts/user/\" + this.props.match.params.username\r\n                  }\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass FollowersPage extends Component {\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <UserFeed\r\n            feedURL={`/api/followings/followers/${this.props.match.params.username}`}\r\n            meUser={this.props.meUser}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowersPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass InfluencersPage extends Component {\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <UserFeed\r\n            feedURL={`/api/followings/influencers/${this.props.match.params.username}`}\r\n            meUser={this.props.meUser}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfluencersPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport Post from \"../Components/Post\";\r\nimport API from \"../api/api\";\r\n\r\nclass PostPage extends Component {\r\n  state = { post: [], liked: false };\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.getPost();\r\n    }\r\n  }\r\n\r\n  getPost = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/posts/${this.props.match.params.postId}`,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ post: response.data });\r\n\r\n        API({\r\n          method: \"get\",\r\n          url: `api/posts/${response.data.id}/liked`,\r\n        }).then((liked) => {\r\n          this.setState({ liked: liked.data });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleUserLiked = (postId) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n      this.setState({ liked: true });\r\n    });\r\n  };\r\n\r\n  handleUserUnLiked = (postId) => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n      this.setState({ liked: false });\r\n    });\r\n  };\r\n\r\n  handleUserCommented = (postId, comment) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/commentPosts`,\r\n      data: comment,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Post page\", this.state.post);\r\n    console.log(\"Post page likes\", this.state.liked);\r\n\r\n    let post = this.state.post;\r\n    let liked = this.state.liked;\r\n\r\n    return this.state.post.length !== 0 ? (\r\n      <Page\r\n        middleComponent={\r\n          <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            post={post}\r\n            liked={liked}\r\n            handleUserCommented={this.handleUserCommented}\r\n            handleUserLiked={this.handleUserLiked}\r\n            handleUserUnLiked={this.handleUserUnLiked}\r\n          />\r\n        }\r\n      />\r\n    ) : (\r\n      <React.Fragment></React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 Error- Page Not Found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport NavigationBar from \"./Components/NavigationBar\";\r\nimport CreatePost from \"./Pages/CreatePost\";\r\nimport Home from \"./Pages/Home\";\r\nimport SignIn from \"./Pages/LogIn\";\r\nimport PrivateRoute from \"./Components/PrivateRoute\";\r\nimport Registration from \"./Pages/Registration\";\r\nimport Explore from \"./Pages/Explore\";\r\nimport Message from \"./Pages/Message\";\r\nimport Search from \"./Pages/Search\";\r\nimport UserPage from \"./Pages/UserPage\";\r\nimport FollowersPage from \"./Pages/FollowersPage\";\r\nimport InfluencersPage from \"./Pages/InfluencersPage\";\r\nimport PostPage from \"./Pages/PostPage\";\r\n\r\nimport NoMatch from \"./Components/NoMatch\";\r\nimport API from \"./api/api\";\r\nimport { logout } from \"./Actions/AuthenticationAction\";\r\n\r\nclass App extends Component {\r\n  state = { user: [] };\r\n\r\n  componentDidMount() {\r\n    if (this.props.loggedIn) {\r\n      API({\r\n        method: \"get\",\r\n        url: \"api/applicationUsers/self\",\r\n      })\r\n        .then((response) => {\r\n          this.setState({ user: response.data });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.props.logout();\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        {this.props.loggedIn ? <NavigationBar /> : <div></div>}\r\n        <Switch>\r\n          <PrivateRoute\r\n            path=\"/\"\r\n            exact\r\n            component={Home}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute path=\"/create-post\" exact component={CreatePost} />\r\n          <PrivateRoute path=\"/message\" exact component={Message} />\r\n          <PrivateRoute path=\"/explore\" exact component={Explore} />\r\n          <PrivateRoute\r\n            path=\"/search\"\r\n            exact\r\n            component={Search}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/user/:username\"\r\n            component={UserPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <Route path=\"/sign-in\" exact component={SignIn} />\r\n          <Route path=\"/register\" exact component={Registration} />\r\n          <PrivateRoute\r\n            path=\"/followers/:username\"\r\n            component={FollowersPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/influencers/:username\"\r\n            component={InfluencersPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute path=\"/post/:postId\" component={PostPage} />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import history from \"../Components/History\";\r\nimport {\r\n  LOGOUT,\r\n  LOGGING_IN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from \"../Actions/AuthenticationAction\";\r\n\r\nconst AuthenciationReduer = (\r\n  state = { loggedIn: false, loggingIn: false, error: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOGOUT:\r\n      console.log(\"user reducer, called LOGOUT\");\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: false,\r\n      };\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"Authorization\");\r\n      history.push(\"/sign-in\");\r\n      break;\r\n\r\n    case LOGGING_IN:\r\n      console.log(\"user reducer, called LOGGING IN\");\r\n      state = {\r\n        ...state,\r\n        loggingIn: true,\r\n        loggedIn: false,\r\n        error: false,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_SUCCESS:\r\n      console.log(\"user reducer, called LOGIN SUCCESS\");\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: true,\r\n        error: false,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_FAIL:\r\n      console.log(\"user reducer, called LOGIN FAIL\");\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: true,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      console.log(\"authentication reducer, reached default case\");\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: true,\r\n        error: false,\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default AuthenciationReduer;\r\n","import AuthenticationReducer from \"./Reducers/AuthenticationReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default createStore(\r\n  AuthenticationReducer,\r\n  {},\r\n  applyMiddleware(logger, thunk)\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}