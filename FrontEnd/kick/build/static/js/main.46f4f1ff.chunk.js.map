{"version":3,"sources":["Components/History.jsx","api/api.jsx","Actions/AuthenticationAction.jsx","Components/NavigationBar.jsx","Components/Page.jsx","Pages/CreatePost.jsx","Components/Post.jsx","Components/Feed.jsx","Components/Time.jsx","Components/LikeNotification.jsx","Components/FollowingNotification.jsx","Components/Dashboard.jsx","Pages/Home.jsx","Pages/LogIn.jsx","Components/PrivateRoute.jsx","Components/CheckValidInput.jsx","Pages/Registration.jsx","Pages/Explore.jsx","Components/UnderConstruction.jsx","Pages/Message.jsx","Components/UserCard.jsx","Components/UserFeed.jsx","Pages/Search.jsx","Pages/UserPage.jsx","Pages/FollowersPage.jsx","Pages/InfluencersPage.jsx","Pages/PostPage.jsx","Components/InLineForm.jsx","Components/WarningPopup.jsx","Pages/Settings.jsx","Pages/CommentPage.jsx","Components/NoMatch.jsx","App.js","serviceWorker.js","Reducers/AuthenticationReducer.jsx","store.jsx","index.js","logo.svg"],"names":["createBrowserHistory","axios","create","baseURL","headers","Authorization","localStorage","logout","type","login","username","password","dispatch","API","method","url","data","then","response","console","log","setItem","authorization","history","push","window","location","reload","catch","error","NavigationBar","handleSignOut","props","Navbar","bg","expand","fixed","Brand","href","src","speaker","width","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","this","meUser","personCircle","gear","Button","onClick","Component","mapDispatchToProps","connect","state","loggedIn","Page","Container","fluid","Row","Col","lg","leftComponent","Fragment","middleComponent","rightComponent","CreatePost","image","caption","city","country","handleFileSubmit","event","preventDefault","setState","URL","createObjectURL","target","files","onChange","e","name","value","onPostSubmit","imageURL","postDate","Date","handleLogout","Form","xs","md","Group","controlId","Image","roundedCircle","File","label","accept","Label","Control","placeholder","variant","Post","comment","onLike","liked","handleUserUnLiked","post","handleUserLiked","onCommentChange","onCommentSubmit","handleUserCommented","setComments","comments","displayComments","length","onDeleteSubmit","handleUserDeleted","Card","Header","to","myPost","Img","logo","Body","heartFill","heart","chat","Title","likes","map","index","Text","key","Subtitle","InputGroup","FormControl","aria-label","aria-describedby","Append","Feed","createFeed","page","totalPages","feedURL","feed","content","concat","noPost","requests","handleWhichUserLiked","Promise","all","values","like","handlePostUpdated","newPost","postId","isLiked","newIndex","modified","handleScroll","document","getElementById","getBoundingClientRect","bottom","innerHeight","privateProfile","addEventListener","removeEventListener","onScroll","undefined","myPosts","Spinner","animation","Time","convertTime","time","dif","Math","abs","floor","LikeNotification","show","handleClose","notification","thePostId","Toast","onClose","userLiked","FollowingNotification","deleteCall","handleAccept","theFollowingId","handleDelete","personFill","following","align","size","Dashboard","likeNotifications","followingNotifications","createNotifications","sort","a","b","prevProps","Home","SignIn","handleAuthentication","bind","handleChange","evt","registered","resetRegistration","Alert","activeKey","Item","PrivateRoute","component","rest","render","pathname","from","checkEmail","email","includes","indexOf","checkPassword","test","Registration","firstName","lastName","missingValue","handleRegistration","property","register","handleChecked","checked","resetLogin","as","errorUsername","errorEmail","Check","errorRegister","JSON","stringify","Explore","UnderConstruction","Figure","caution","Caption","description","Message","UserCard","influencerCount","followingCount","checkFollowerCount","user","checkInfluencerCount","checkFollowing","handleFollow","handleDeleteFollow","meUsername","createFollowingBanner","Badge","pill","followerWord","whereIsInfluencer","Jumbotron","whereIsFollower","biography","UserFeed","Search","search","selectedOption","searchTerm","onRadioToggle","UserPage","match","params","FollowersPage","InfluencersPage","PostPage","getPost","InLineForm","htmlFor","srOnly","current","handleSubmit","WarningPopup","Modal","aria-labelledby","centered","Footer","onDelete","Settings","success","popup","changeAttr","attr","setTimeout","deleteAccount","defaultChecked","rel","CommentPage","deleteComment","NoMatch","App","getUserInfo","path","exact","Boolean","hostname","AuthenciationReduer","loggingIn","registering","action","removeItem","persistConfig","storage","persistedReducer","persistReducer","AuthenticationReducer","store","createStore","applyMiddleware","logger","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.46f4f1ff.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../Actions/AuthenticationAction\";\r\n\r\n// local test\r\nexport default axios.create({\r\n  baseURL: `https://quiet-inlet-83310.herokuapp.com/`,\r\n  headers: {\r\n    Authorization: localStorage[\"Authorization\"],\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// const defaultAxios = axios.create({\r\n//   baseURL: `https://quiet-inlet-83310.herokuapp.com/`,\r\n//   headers: {\r\n//     Authorization: localStorage[\"Authorization\"],\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n// });\r\n\r\n// defaultAxios.interceptors.response.use(\r\n//   function (response) {\r\n//     // Any status code that lie within the range of 2xx cause this function to trigger\r\n//     // Do something with response data\r\n//     return response;\r\n//   },\r\n//   function (error) {\r\n//     // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n//     // Do something with response error\r\n//     console.log(\"Http error: \", error);\r\n//     if (this.props.loggedIn) {\r\n//       console.log(\"logged in\");\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     loggedIn: state.loggedIn,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   logout,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(defaultAxios);\r\n","import history from \"../Components/History\";\r\nimport API from \"../api/api\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n}\r\n\r\nexport const LOGGING_IN = \"LOGGING IN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN SUCCESSFUL\";\r\nexport const LOGIN_FAIL = \"LOGIN FAILED\";\r\nexport const LOGIN_RESET = \"LOGIN RESET\";\r\n\r\nexport function login(username, password) {\r\n  return (dispatch) => {\r\n    dispatch({ type: LOGGING_IN });\r\n\r\n    API({\r\n      method: \"post\",\r\n      url: \"/login\",\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n      headers: {},\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch({ type: LOGIN_SUCCESS });\r\n        localStorage.setItem(\"user\", username);\r\n        localStorage.setItem(\"Authorization\", response.headers.authorization);\r\n\r\n        history.push(\"/\");\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({ type: LOGIN_FAIL });\r\n      });\r\n  };\r\n}\r\n\r\nexport function resetLogin() {\r\n  return {\r\n    type: LOGIN_RESET,\r\n  };\r\n}\r\n\r\nexport const REGISTERING = \"REGISTERING\";\r\nexport const REGISTER_SUCCESSFUL = \"REGISTER SUCCESSFUL\";\r\nexport const REGISTER_FAIL_USERNAME = \"REGISTER FAILED DUE TO USERNAME\";\r\nexport const REGISTER_FAIL_EMAIL = \"REGISTER FAILED DUE TO EMAIL\";\r\nexport const REGISTER_FAIL = \"REGISTRATION FAILED\";\r\nexport const REGISTER_RESET = \"REGISTER RESET\";\r\n\r\nexport function resetRegistration() {\r\n  return {\r\n    type: REGISTER_RESET,\r\n  };\r\n}\r\n\r\nexport function register(data) {\r\n  return (dispatch) => {\r\n    dispatch({ type: REGISTERING });\r\n\r\n    API({\r\n      method: \"post\",\r\n      url: \"/api/applicationUsers/sign-up\",\r\n      data: JSON.stringify(data),\r\n      headers: {},\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch({ type: REGISTER_SUCCESSFUL });\r\n        history.push(\"/sign-in\");\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error.response) {\r\n          if (error.response.data.error === \"Username was already taken\") {\r\n            dispatch({ type: REGISTER_FAIL_USERNAME });\r\n          } else if (error.response.data.error === \"Email was already taken\") {\r\n            dispatch({ type: REGISTER_FAIL_EMAIL });\r\n          } else {\r\n            dispatch({ type: REGISTER_FAIL });\r\n          }\r\n        } else {\r\n          dispatch({ type: REGISTER_FAIL });\r\n        }\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport speaker from \"bootstrap-icons/icons/speaker.svg\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport personCircle from \"bootstrap-icons/icons/person-circle.svg\";\r\nimport gear from \"bootstrap-icons/icons/gear-fill.svg\";\r\n\r\nimport { logout } from \"../Actions/AuthenticationAction\";\r\n\r\nclass NavigationBar extends Component {\r\n  handleSignOut = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            src={speaker}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"Kick logo\"\r\n          />{\" \"}\r\n          Kick\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n            <Nav.Link href=\"/message\">Message</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/explore\">Explore</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/search\">Search</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/create-post\">Create Post</Nav.Link>\r\n          </Nav>\r\n\r\n          <Nav className=\"ml-auto\">\r\n            <Navbar.Brand href={`/user/${this.props.meUser.username}`}>\r\n              <img\r\n                src={personCircle}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"User profile\"\r\n              />\r\n            </Navbar.Brand>\r\n            <Navbar.Brand href=\"/settings\">\r\n              <img\r\n                src={gear}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"Settings\"\r\n              />\r\n            </Navbar.Brand>\r\n            <Button onClick={this.props.logout}>Sign Out</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Page extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col lg=\"3\"></Col>\r\n            {this.props.leftComponent ? (\r\n              this.props.leftComponent\r\n            ) : (\r\n              <React.Fragment />\r\n            )}\r\n            <Col lg=\"6\">\r\n              {this.props.middleComponent ? (\r\n                this.props.middleComponent\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </Col>\r\n            <Col lg=\"3\" className=\"Sidebar sticky-top\">\r\n              {this.props.rightComponent ? (\r\n                this.props.rightComponent\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport history from \"../Components/History\";\r\n\r\nclass CreatePost extends Component {\r\n  state = { image: \"\", caption: \"\", city: \"\", country: \"\" };\r\n\r\n  handleFileSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ image: URL.createObjectURL(event.target.files[0]) });\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onPostSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = {\r\n      caption: this.state.caption,\r\n      imageURL: \"inDevelopment.com\",\r\n      city: this.state.city,\r\n      country: this.state.country,\r\n      postDate: new Date(),\r\n    };\r\n\r\n    API({\r\n      method: \"post\",\r\n      url: \"api/posts\",\r\n      data: data,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        history.push(\"/\");\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.props.handleLogout();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let { caption, city, country } = this.state;\r\n\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <Form>\r\n            <Col>\r\n              <Row xs=\"6\" md=\"3\" lg=\"1\">\r\n                <Form.Group controlId=\"formImage\">\r\n                  <Image src={this.state.image} roundedCircle fluid />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formFile\">\r\n                  <Form.File\r\n                    id=\"formFileImageUpload\"\r\n                    label=\"Upload a local image\"\r\n                    onChange={this.handleFileSubmit}\r\n                    type=\"file\"\r\n                    accept=\".jpg, .png, .jpeg\"\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formCaption\">\r\n                  <Form.Label>Caption</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter a caption\"\r\n                    name=\"caption\"\r\n                    value={caption}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Form.Group controlId=\"formLocation\">\r\n                  <Form.Label>Location</Form.Label>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        name=\"city\"\r\n                        value={city}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Country\"\r\n                        name=\"country\"\r\n                        value={country}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.onPostSubmit}\r\n                >\r\n                  Post\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n          </Form>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, Button, Image, FormControl, InputGroup } from \"react-bootstrap\";\r\nimport heart from \"bootstrap-icons/icons/heart.svg\";\r\nimport heartFill from \"bootstrap-icons/icons/heart-fill.svg\";\r\nimport chat from \"bootstrap-icons/icons/chat.svg\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    comment: \"\",\r\n  };\r\n\r\n  onLike = () => {\r\n    // if not liked, like, otherwise unlike\r\n    if (!this.props.liked) {\r\n      this.props.handleUserLiked(this.props.post.id);\r\n    } else {\r\n      this.props.handleUserUnLiked(this.props.post.id);\r\n    }\r\n  };\r\n\r\n  onCommentChange = (event) => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onCommentSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.comment);\r\n    this.props.handleUserCommented(this.props.post.id, this.state.comment);\r\n  };\r\n\r\n  setComments = () => {\r\n    let comments = this.props.post.comments;\r\n    let displayComments = [\"\"];\r\n    if (comments.length !== 0) {\r\n      displayComments = [\r\n        comments[comments.length - 1].username +\r\n          \" : \" +\r\n          comments[comments.length - 1].comment,\r\n      ];\r\n    }\r\n\r\n    return displayComments;\r\n  };\r\n\r\n  onDeleteSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.comment);\r\n    this.props.handleUserDeleted(this.props.post.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Link to={`/user/${this.props.post.username}`}>\r\n            {this.props.post.username}\r\n          </Link>\r\n          {\"    \"}\r\n          {this.props.myPost ? (\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"ml-auto float-right\"\r\n              onClick={this.onDeleteSubmit}\r\n            >\r\n              Delete post\r\n            </Button>\r\n          ) : (\r\n            <React.Fragment></React.Fragment>\r\n          )}\r\n        </Card.Header>\r\n        <Card.Img variant=\"top\" src={logo} />\r\n        <Card.Body>\r\n          <Button variant=\"link\" onClick={this.onLike}>\r\n            {this.props.liked ? (\r\n              <Image src={heartFill} alt=\"\" />\r\n            ) : (\r\n              <Image src={heart} alt=\"\" />\r\n            )}\r\n          </Button>\r\n          <Link to={`/comment/${this.props.post.id}`}>\r\n            <img src={chat} alt=\"comments\" />\r\n          </Link>\r\n          <Card.Title>{this.props.post.likes.length} likes</Card.Title>\r\n          <Card.Title>\r\n            {this.props.post.username + \" : \" + this.props.post.caption}\r\n          </Card.Title>\r\n          {this.setComments().map((comment, index) => (\r\n            <Card.Text key={index}>{comment}</Card.Text>\r\n          ))}\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {this.props.post.city}, {this.props.post.country}\r\n          </Card.Subtitle>\r\n          <footer>{this.props.post.postDate}</footer>\r\n        </Card.Body>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Add a comment...\"\r\n            aria-label=\"Comment\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={this.onCommentChange}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"outline-secondary\" onClick={this.onCommentSubmit}>\r\n              Post\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport Post from \"./Post\";\r\nimport API from \"../api/api\";\r\n\r\nclass Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      feed: [],\r\n      liked: [],\r\n      privateProfile: false,\r\n      page: 0,\r\n      totalPages: 1,\r\n    };\r\n    this.createFeed();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.setState(\r\n        {\r\n          page: 0,\r\n          totalPages: 1,\r\n          feed: [],\r\n          liked: [],\r\n          privateProfile: false,\r\n        },\r\n        this.createFeed\r\n      );\r\n    }\r\n  }\r\n\r\n  createFeed = () => {\r\n    // check that not requesting if no more pages\r\n    if (this.state.page >= this.state.totalPages) {\r\n      return;\r\n    }\r\n\r\n    API({\r\n      method: \"get\",\r\n      url: this.props.feedURL + `page=${this.state.page}&size=10`,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"create feed response\", response);\r\n        let feed = response.data.content;\r\n        this.setState({ feed: this.state.feed.concat(feed) });\r\n        this.setState({ totalPages: response.data.totalPages });\r\n        this.setState({ page: this.state.page + 1 });\r\n\r\n        if (response.data === \"Not following or public\") {\r\n          this.setState({ noPost: true });\r\n        }\r\n\r\n        return feed;\r\n      })\r\n      .then((feed) => {\r\n        let requests = feed.map((post) => this.handleWhichUserLiked(post));\r\n        Promise.all(requests).then((values) => {\r\n          let liked = values.map((like) => like.data);\r\n          this.setState({ liked: this.state.liked.concat(liked) });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleWhichUserLiked = (post) => {\r\n    return API({\r\n      method: \"get\",\r\n      url: `api/posts/${post.id}/liked`,\r\n    });\r\n  };\r\n\r\n  handlePostUpdated = (newPost, postId, isLiked) => {\r\n    // replace the corresponding post with the new one\r\n    let feed = this.state.feed;\r\n    let liked = this.state.liked;\r\n    let newIndex = 0;\r\n\r\n    let modified = feed.map((post, index) => {\r\n      if (post.id === postId) {\r\n        console.log(\"mathicng postId\", postId);\r\n        console.log(\"matching index\", index);\r\n        newIndex = index;\r\n        return newPost;\r\n      } else {\r\n        return post;\r\n      }\r\n    });\r\n\r\n    if (isLiked !== \"comment\") {\r\n      liked[newIndex] = isLiked;\r\n    }\r\n\r\n    this.setState({ feed: modified });\r\n    this.setState({ liked });\r\n  };\r\n\r\n  handleUserLiked = (postId) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.handlePostUpdated(response.data, postId, true);\r\n    });\r\n  };\r\n\r\n  handleUserUnLiked = (postId) => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.handlePostUpdated(response.data, postId, false);\r\n    });\r\n  };\r\n\r\n  handleUserCommented = (postId, comment) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/commentPosts`,\r\n      data: comment,\r\n    }).then((response) => {\r\n      // replace the corresponding post with the new one\r\n      this.handlePostUpdated(response.data, postId, \"comment\");\r\n    });\r\n  };\r\n\r\n  handleUserDeleted = (postId) => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `api/posts/${postId}`,\r\n    }).then(() => {\r\n      window.location.reload(true);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    if (\r\n      document.getElementById(\"feed\").getBoundingClientRect().bottom <=\r\n      window.innerHeight + 1\r\n    ) {\r\n      this.createFeed();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Feed\", this.state.feed);\r\n    return (\r\n      <div onScroll={this.handleScroll} id=\"feed\">\r\n        {this.state.feed && this.state.feed[0] != undefined ? (\r\n          this.state.feed.map((post, index) => (\r\n            <Post\r\n              key={post.id}\r\n              id={post.id}\r\n              post={post}\r\n              liked={this.state.liked[index]}\r\n              handleUserCommented={this.handleUserCommented}\r\n              handleUserLiked={this.handleUserLiked}\r\n              handleUserUnLiked={this.handleUserUnLiked}\r\n              handleUserDeleted={this.handleUserDeleted}\r\n              myPost={this.props.myPosts}\r\n            ></Post>\r\n          ))\r\n        ) : this.state.feed ? (\r\n          <h1 className=\"center\">No Posts</h1>\r\n        ) : (\r\n          <h1 className=\"center\">Private profile</h1>\r\n        )}\r\n        {this.state.page < this.state.totalPages ? (\r\n          <div className=\"center\">\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n            <Spinner animation=\"border\" variant=\"secondary\" />\r\n            <Spinner animation=\"border\" variant=\"success\" />\r\n            <Spinner animation=\"border\" variant=\"danger\" />\r\n            <Spinner animation=\"border\" variant=\"warning\" />\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n            <Spinner animation=\"border\" variant=\"light\" />\r\n            <Spinner animation=\"border\" variant=\"dark\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Time extends Component {\r\n  convertTime = (time) => {\r\n    let dif = Math.abs(time - new Date()) / 86400000;\r\n\r\n    if (dif < 1) {\r\n      return \"Today\";\r\n    } else {\r\n      return Math.floor(dif) + \"days ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.convertTime(this.props.time)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Time;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../api/api\";\r\n\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport heartFill from \"bootstrap-icons/icons/heart-fill.svg\";\r\nimport Time from \"./Time\";\r\n\r\nclass LikeNotification extends Component {\r\n  state = { show: true };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/likeNotifications/single/${this.props.notification.thePostId}`,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Toast show={this.state.show} onClose={this.handleClose}>\r\n        <Toast.Header>\r\n          <img src={heartFill} className=\"rounded mr-2\" alt=\"\" />\r\n          <strong className=\"mr-auto\">\r\n            <Link to={`/user/${this.props.notification.userLiked}`}>\r\n              {this.props.notification.userLiked}\r\n            </Link>{\" \"}\r\n            liked your{\" \"}\r\n            <Link to={`/post/${this.props.notification.thePostId}`}>post</Link>\r\n          </strong>\r\n          <small>\r\n            <Time time={this.props.notification.time} />\r\n          </small>\r\n        </Toast.Header>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LikeNotification;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../api/api\";\r\n\r\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\r\nimport personFill from \"bootstrap-icons/icons/person-fill.svg\";\r\nimport Time from \"./Time\";\r\n\r\nclass FollowingNotification extends Component {\r\n  state = { show: true };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.deleteCall();\r\n  };\r\n\r\n  deleteCall = () => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/followingNotifications/single/${this.props.notification.id}`,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  handleAccept = () => {\r\n    this.setState({ show: false });\r\n    API({\r\n      method: \"post\",\r\n      url: `/api/followings/${this.props.notification.theFollowingId}/true`,\r\n    })\r\n      .then(() => {\r\n        this.deleteCall();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.setState({ show: false });\r\n    this.deleteCall();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Toast show={this.state.show} onClose={this.handleClose}>\r\n        <Toast.Header>\r\n          <img src={personFill} className=\"rounded mr-2\" alt=\"\" />\r\n          <strong className=\"mr-auto\">\r\n            <Link to={`/user/${this.props.notification.following}`}>\r\n              {this.props.notification.following}\r\n            </Link>{\" \"}\r\n            wants to follow you\r\n          </strong>\r\n          <small>\r\n            <Time time={this.props.notification.time} />\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Row>\r\n            <Col align=\"right\">\r\n              <Button onClick={this.handleAccept} size=\"sm\">\r\n                Accept\r\n              </Button>\r\n            </Col>\r\n            <Col align=\"left\">\r\n              <Button\r\n                onClick={this.handleDelete}\r\n                variant=\"outline-warning\"\r\n                size=\"sm\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowingNotification;\r\n","import React, { Component } from \"react\";\r\nimport LikeNotification from \"./LikeNotification\";\r\nimport FollowingNotification from \"./FollowingNotification\";\r\n\r\nclass Dashboard extends Component {\r\n  state = { likeNotifications: [], followingNotifications: [] };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.meUser !== prevProps.meUser) {\r\n      console.log(\"dashboard props\", this.props.meUser);\r\n      this.setState({ likeNotifications: this.props.meUser.likeNotifications });\r\n      this.setState({\r\n        followingNotifications: this.props.meUser.followingNotifications,\r\n      });\r\n    }\r\n  }\r\n\r\n  createNotifications = () => {\r\n    if (\r\n      this.state.likeNotifications.length === 0 &&\r\n      this.state.followingNotifications.length === 0\r\n    ) {\r\n      return <div className=\"center\">No Notifications</div>;\r\n    }\r\n\r\n    let likeNotifications = this.state.likeNotifications.map(\r\n      (notification, index) => (\r\n        <LikeNotification key={index} notification={notification} />\r\n      )\r\n    );\r\n\r\n    let followingNotifications = this.state.followingNotifications.map(\r\n      (notification, index) => (\r\n        <FollowingNotification\r\n          key={index + likeNotifications.length}\r\n          notification={notification}\r\n        />\r\n      )\r\n    );\r\n\r\n    let sort = function (a, b) {\r\n      return a.time < b.time ? -1 : a.time === b.time ? 0 : 1;\r\n    };\r\n\r\n    likeNotifications.sort(sort);\r\n    followingNotifications.sort(sort);\r\n\r\n    let allNotificationComponents = followingNotifications.concat(\r\n      likeNotifications\r\n    );\r\n\r\n    return allNotificationComponents;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sticky-top overflow-auto\">\r\n        <h3 className=\"center\">Notifications</h3>\r\n        {this.createNotifications()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Feed from \"../Components/Feed\";\r\nimport Dashboard from \"../Components/Dashboard\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col lg=\"3\"></Col>\r\n            <Col lg=\"6\">\r\n              <Feed feedURL=\"api/posts/feed?\" />\r\n            </Col>\r\n            <Col lg=\"3\" className=\"Sidebar sticky-top\">\r\n              <Dashboard meUser={this.props.meUser} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Nav, Alert } from \"react-bootstrap\";\r\nimport speaker from \"bootstrap-icons/icons/speaker.svg\";\r\n\r\nimport Page from \"../Components/Page\";\r\n\r\nimport { login, resetRegistration } from \"../Actions/AuthenticationAction\";\r\n\r\nclass SignIn extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  async handleAuthentication(e) {\r\n    e.preventDefault();\r\n    this.props.login(this.state.username, this.state.password);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    const value = evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.registered) {\r\n      this.props.resetRegistration();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <img\r\n              src={speaker}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"align-baseline\"\r\n              alt=\"Kick logo\"\r\n            />{\" \"}\r\n            <span className=\"large-text\">Kick</span>\r\n            <p className=\"italic\">\r\n              <small>Make sharing easier</small>\r\n            </p>\r\n            <div className=\"sign-in-border\">\r\n              <Form>\r\n                <Form.Group>\r\n                  {this.props.registered ? (\r\n                    <Alert variant=\"success\">\r\n                      Registration successful, login!\r\n                    </Alert>\r\n                  ) : (\r\n                    <React.Fragment></React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                  <Form.Control\r\n                    type=\"username\"\r\n                    placeholder=\"Username\"\r\n                    onChange={this.handleChange}\r\n                    name=\"username\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                    name=\"password\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formErrorNotification\">\r\n                  {this.props.error === true ? (\r\n                    <Form.Text className=\"text-muted\">\r\n                      The username or password you provided was incorrect\r\n                    </Form.Text>\r\n                  ) : (\r\n                    <React.Fragment />\r\n                  )}\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleAuthentication}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n            <Nav className=\"justify-content-center\" activeKey=\"/register\">\r\n              <Nav.Item>\r\n                <Nav.Link href=\"/register\">\r\n                  Don't have an account? Create one!\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    error: state.error,\r\n    registered: state.registered,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  resetRegistration,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage[\"Authorization\"] ? (\r\n          <Component {...rest} {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/sign-in\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export function checkEmail(email) {\r\n  if (\r\n    !email.includes(\"@\") ||\r\n    !email.includes(\".\") ||\r\n    !(email.indexOf(\".\") > email.indexOf(\"@\"))\r\n  ) {\r\n    console.log(\"email bad\");\r\n    return \"a valid email format\";\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function checkPassword(password) {\r\n  if (\r\n    !/\\d/.test(password) ||\r\n    !/[~`!@#$%^&*+=\\-[\\]\\\\';,/{}|\\\\\":<>?]/g.test(password) ||\r\n    !/[a-z]/.test(password) ||\r\n    !(password.length > 7) ||\r\n    !(password.length < 21)\r\n  ) {\r\n    console.log(\"password bad\");\r\n    return \"a valid password\";\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Col, Nav, Alert } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport speaker from \"bootstrap-icons/icons/speaker.svg\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport { register, resetLogin } from \"../Actions/AuthenticationAction\";\r\nimport { checkEmail, checkPassword } from \"../Components/CheckValidInput\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    privateProfile: false,\r\n    error: false,\r\n    missingValue: \"\",\r\n  };\r\n\r\n  handleRegistration = (evt) => {\r\n    evt.preventDefault();\r\n    let data = { ...this.state };\r\n    delete data.error;\r\n    delete data.missingValue;\r\n\r\n    let missingValue = checkEmail(data.email);\r\n    if (missingValue !== \"\") {\r\n      this.setState({ missingValue });\r\n      return;\r\n    }\r\n\r\n    missingValue = checkPassword(data.password);\r\n    if (missingValue !== \"\") {\r\n      this.setState({ missingValue });\r\n      return;\r\n    }\r\n\r\n    // check no missing fields\r\n    for (const property in data) {\r\n      if (data[property] === \"\") {\r\n        this.setState({ missingValue: property });\r\n        return;\r\n      }\r\n    }\r\n\r\n    console.log(\"missing value\", this.state.missingValue);\r\n\r\n    this.props.register(data);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    });\r\n  };\r\n\r\n  handleChecked = (evt) => {\r\n    const value = evt.target.checked;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.resetLogin();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <img\r\n              src={speaker}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"align-baseline\"\r\n              alt=\"Kick logo\"\r\n            />{\" \"}\r\n            <span className=\"large-text\">Kick</span>\r\n            <div className=\"sign-in-border\">\r\n              <Form>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                    <Form.Control\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      onChange={this.handleChange}\r\n                      name=\"username\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.handleChange}\r\n                      name=\"password\"\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                      Password must be 8-20 characters. Include numbers,\r\n                      letters, and special characters.\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                {this.props.errorUsername ? (\r\n                  <Alert variant=\"danger\">\r\n                    <p className=\"italic mb-0\">\r\n                      This username has already been chosen\r\n                    </p>\r\n                  </Alert>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleChange}\r\n                      name=\"email\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                {this.props.errorEmail ? (\r\n                  <Alert variant=\"danger\">\r\n                    <p className=\"italic mb-0\">\r\n                      This email has already been associated with an account\r\n                    </p>\r\n                  </Alert>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                    <Form.Control\r\n                      type=\"firstName\"\r\n                      placeholder=\"First name\"\r\n                      onChange={this.handleChange}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                    <Form.Control\r\n                      type=\"lastName\"\r\n                      placeholder=\"Last name\"\r\n                      onChange={this.handleChange}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Control\r\n                      type=\"city\"\r\n                      placeholder=\"City\"\r\n                      onChange={this.handleChange}\r\n                      name=\"city\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridCountry\">\r\n                    <Form.Control\r\n                      type=\"country\"\r\n                      placeholder=\"Country\"\r\n                      onChange={this.handleChange}\r\n                      name=\"country\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group id=\"formGridPrivate\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Set privateProfile account\"\r\n                    onChange={this.handleChecked}\r\n                    name=\"privateProfile\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                {this.props.errorRegister ? (\r\n                  <Alert variant=\"danger\">\r\n                    <p className=\"italic mb-0 center\">An error has occurred</p>\r\n                  </Alert>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n\r\n                {this.state.missingValue ? (\r\n                  <Alert variant=\"danger\">\r\n                    <p className=\"italic mb-0 center\">\r\n                      {this.state.missingValue} is required\r\n                    </p>\r\n                  </Alert>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleRegistration}\r\n                >\r\n                  Register!\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n            <Nav className=\"justify-content-center\" activeKey=\"/sign-in\">\r\n              <Nav.Item>\r\n                <Nav.Link href=\"/sign-in\">Already an account? Log in!</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorRegister: state.errorRegister,\r\n    errorUsername: state.errorUsername,\r\n    errorEmail: state.errorEmail,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  register,\r\n  resetLogin,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport Feed from \"../Components/Feed\";\r\n\r\nclass Explore extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <h1>Explore</h1>\r\n            <Feed feedURL=\"/api/posts/explore?\" />\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Explore;\r\n","import React from \"react\";\r\nimport { Figure } from \"react-bootstrap\";\r\nimport caution from \"bootstrap-icons/icons/exclamation-triangle-fill.svg\";\r\n\r\nconst UnderConstruction = (props) => {\r\n  return (\r\n    <Figure className=\"center\">\r\n      <Figure.Image width={30} height={30} alt=\"171x180\" src={caution} />\r\n      <Figure.Caption className=\"figure-caption text-center\">\r\n        {props.description} are currently under construction\r\n      </Figure.Caption>\r\n    </Figure>\r\n  );\r\n};\r\n\r\nexport default UnderConstruction;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UnderConstruction from \"../Components/UnderConstruction\";\r\n\r\nclass Message extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <h1>Message</h1>\r\n            <div className=\"center\">\r\n              <UnderConstruction description=\"Messages\"></UnderConstruction>\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Badge,\r\n  Jumbotron,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport logo from \"../logo.svg\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nclass UserCard extends Component {\r\n  state = { following: \"not following\", influencerCount: 0, followingCount: 0 };\r\n\r\n  componentWillMount() {\r\n    this.checkFollowing();\r\n    this.checkFollowerCount();\r\n    this.checkInfluencerCount();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.checkFollowing();\r\n      this.checkFollowerCount();\r\n      this.checkInfluencerCount();\r\n    }\r\n  }\r\n\r\n  checkFollowerCount = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/applicationUsers/followingCount/${this.props.user.username}`,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ followingCount: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  checkInfluencerCount = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/applicationUsers/influencerCount/${this.props.user.username}`,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ influencerCount: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  checkFollowing = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/followings/check/${this.props.user.username}`,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ following: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleFollow = () => {\r\n    API({\r\n      method: \"post\",\r\n      url: `/api/followings/${this.props.user.username}`,\r\n    })\r\n      .then(() => {\r\n        this.checkFollowing();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleDeleteFollow = () => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/followings/follower/deleting/influencer/${this.props.meUsername}/${this.props.user.username}`,\r\n    })\r\n      .then(() => {\r\n        this.checkFollowing();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  createFollowingBanner = () => {\r\n    if (this.props.meUsername === this.props.user.username) {\r\n      return (\r\n        <Badge pill variant=\"primary\">\r\n          You!\r\n        </Badge>\r\n      );\r\n    }\r\n\r\n    if (this.state.following === \"following\") {\r\n      return (\r\n        <Button onClick={this.handleDeleteFollow} size=\"sm\">\r\n          UnFollow\r\n        </Button>\r\n      );\r\n    } else if (this.state.following === \"requested following\") {\r\n      return (\r\n        <Button className=\"mb-0\" onClick={this.handleDeleteFollow} size=\"sm\">\r\n          Cancel follow request\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button onClick={this.handleFollow} size=\"sm\">\r\n          Follow\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let followerWord = \"Followers\";\r\n    if (\r\n      this.props.user.whereIsInfluencer &&\r\n      this.props.user.whereIsInfluencer.length === 1\r\n    ) {\r\n      followerWord = \"Follower\";\r\n    }\r\n\r\n    return (\r\n      <Jumbotron>\r\n        <Image\r\n          src={logo}\r\n          width=\"75\"\r\n          height=\"75\"\r\n          className=\"d-inline-block center\"\r\n          alt=\"React Bootstrap logo\"\r\n        />\r\n        <Link to={`/user/${this.props.user.username}`}>\r\n          {this.props.user.username}\r\n        </Link>\r\n        {\"    \"}\r\n        {!this.props.user.privateProfile ? (\r\n          <Badge pill variant=\"success\">\r\n            Public\r\n          </Badge>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Badge pill variant=\"warning\">\r\n              Private\r\n            </Badge>\r\n          </React.Fragment>\r\n        )}\r\n        {\"    \"}\r\n        {this.createFollowingBanner()}\r\n        <div>\r\n          {this.props.user.city}, {this.props.user.country}\r\n        </div>\r\n        <Container>\r\n          <Row>\r\n            <Col align=\"right\">\r\n              {this.state.following === \"following\" &&\r\n              this.props.user.whereIsInfluencer ? (\r\n                <Link to={`/followers/${this.props.user.username}`}>\r\n                  {this.state.followingCount} {followerWord}\r\n                </Link>\r\n              ) : (\r\n                <React.Fragment>\r\n                  {this.state.followingCount} {followerWord}\r\n                </React.Fragment>\r\n              )}\r\n            </Col>\r\n            <Col align=\"left\">\r\n              {this.state.following === \"following\" &&\r\n              this.props.user.whereIsFollower ? (\r\n                <Link to={`/influencers/${this.props.user.username}`}>\r\n                  {this.state.influencerCount} Following\r\n                </Link>\r\n              ) : (\r\n                <React.Fragment>\r\n                  {this.state.influencerCount} Following\r\n                </React.Fragment>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <hr className=\"hr-line\" />\r\n        <p className=\"less-margin\">\r\n          <b>\r\n            {this.props.user.firstName} {this.props.user.lastName}\r\n          </b>\r\n        </p>\r\n        <p className=\"less-margin\">{this.props.user.biography}</p>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport API from \"../api/api\";\r\nimport UserCard from \"./UserCard\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass UserFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feed: [], page: 0, totalPages: 1 };\r\n    this.createFeed();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props.feedURL !== props.feedURL) {\r\n      this.setState({ feed: [], page: 0, totalPages: 1 }, this.createFeed);\r\n    }\r\n  }\r\n\r\n  createFeed = () => {\r\n    // check that not requesting if no more pages\r\n    if (this.state.page >= this.state.totalPages) {\r\n      console.log(\"reached end of user feed\");\r\n      return;\r\n    }\r\n\r\n    API({\r\n      method: \"get\",\r\n      url: this.props.feedURL + `page=${this.state.page}&size=10`,\r\n    })\r\n      .then((response) => {\r\n        let feed = response.data.content;\r\n        this.setState({\r\n          feed: this.state.feed.concat(feed),\r\n          totalPages: response.data.totalPages,\r\n          page: this.state.page + 1,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    if (\r\n      document.getElementById(\"feed\").getBoundingClientRect().bottom <=\r\n      window.innerHeight + 1\r\n    ) {\r\n      this.createFeed();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"User feed state\", this.state);\r\n    return (\r\n      <div onScroll={this.handleScroll} id=\"feed\">\r\n        {this.state.feed.map((user) => (\r\n          <UserCard user={user} meUsername={this.props.meUser.username} />\r\n        ))}\r\n        {this.state.page < this.state.totalPages ? (\r\n          <div className=\"center\">\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n            <Spinner animation=\"border\" variant=\"secondary\" />\r\n            <Spinner animation=\"border\" variant=\"success\" />\r\n            <Spinner animation=\"border\" variant=\"danger\" />\r\n            <Spinner animation=\"border\" variant=\"warning\" />\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n            <Spinner animation=\"border\" variant=\"light\" />\r\n            <Spinner animation=\"border\" variant=\"dark\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport Feed from \"../Components/Feed\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    search: \"\",\r\n    selectedOption: \"userToggle\",\r\n  };\r\n\r\n  searchTerm = (search) => {\r\n    return \"?search=\" + search;\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onRadioToggle = (e) => {\r\n    this.setState({ selectedOption: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Search\", this.state.search);\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <Row className=\"sticky-top\">\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder=\"Search...\"\r\n                  name=\"search\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.search}\r\n                />\r\n              </InputGroup>\r\n            </Row>\r\n            <Row>\r\n              <Col align=\"right\">\r\n                <Form.Check\r\n                  label=\"Users\"\r\n                  type=\"radio\"\r\n                  id=\"user-radio\"\r\n                  value=\"userToggle\"\r\n                  onChange={this.onRadioToggle}\r\n                  checked={this.state.selectedOption === \"userToggle\"}\r\n                />\r\n              </Col>\r\n              <Col align=\"left\">\r\n                <Form.Check\r\n                  label=\"Posts\"\r\n                  type=\"radio\"\r\n                  id=\"post-radio\"\r\n                  value=\"postToggle\"\r\n                  onChange={this.onRadioToggle}\r\n                  checked={this.state.selectedOption === \"postToggle\"}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {(this.state.search !== \"\") &\r\n            (this.state.selectedOption === \"postToggle\") ? (\r\n              <Feed\r\n                feedURL={`/api/posts/search?search=${this.state.search}&`}\r\n              />\r\n            ) : (\r\n              <React.Fragment></React.Fragment>\r\n            )}\r\n            {(this.state.search !== \"\") &\r\n            (this.state.selectedOption === \"userToggle\") ? (\r\n              <UserFeed\r\n                feedURL={`/api/applicationUsers/search?search=username:*${this.state.search}*&`}\r\n                meUser={this.props.meUser}\r\n              />\r\n            ) : (\r\n              <React.Fragment></React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Feed from \"../Components/Feed\";\r\n\r\nimport API from \"../api/api\";\r\n\r\nclass UserPage extends Component {\r\n  state = { user: [] };\r\n\r\n  componentDidMount() {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/applicationUsers/username/${this.props.match.params.username}`,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"user profile fetch\", response);\r\n        this.setState({ user: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <UserCard\r\n              user={this.state.user}\r\n              meUsername={this.props.meUser.username}\r\n            />\r\n            <Feed\r\n              feedURL={\r\n                \"/api/posts/user/\" + this.props.match.params.username + \"?\"\r\n              }\r\n              myPosts={\r\n                this.props.match.params.username === this.props.meUser.username\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass FollowersPage extends Component {\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <UserFeed\r\n            feedURL={`/api/followings/followers/${this.props.match.params.username}?`}\r\n            meUser={this.props.meUser}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FollowersPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport UserFeed from \"../Components/UserFeed\";\r\n\r\nclass InfluencersPage extends Component {\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <UserFeed\r\n            feedURL={`/api/followings/influencers/${this.props.match.params.username}?`}\r\n            meUser={this.props.meUser}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfluencersPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport Post from \"../Components/Post\";\r\nimport API from \"../api/api\";\r\n\r\nclass PostPage extends Component {\r\n  state = { post: [], liked: false };\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    if (this.props !== props) {\r\n      this.getPost();\r\n    }\r\n  }\r\n\r\n  getPost = () => {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/posts/${this.props.match.params.postId}`,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ post: response.data });\r\n\r\n        API({\r\n          method: \"get\",\r\n          url: `api/posts/${response.data.id}/liked`,\r\n        }).then((liked) => {\r\n          this.setState({ liked: liked.data });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleUserLiked = (postId) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n      this.setState({ liked: true });\r\n    });\r\n  };\r\n\r\n  handleUserUnLiked = (postId) => {\r\n    API({\r\n      method: \"delete\",\r\n      url: `api/posts/${postId}/likePosts`,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n      this.setState({ liked: false });\r\n    });\r\n  };\r\n\r\n  handleUserCommented = (postId, comment) => {\r\n    API({\r\n      method: \"post\",\r\n      url: `api/posts/${postId}/commentPosts`,\r\n      data: comment,\r\n    }).then((response) => {\r\n      this.setState({ post: response.data });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Post page\", this.state.post);\r\n    console.log(\"Post page likes\", this.state.liked);\r\n\r\n    let post = this.state.post;\r\n    let liked = this.state.liked;\r\n\r\n    return this.state.post.length !== 0 ? (\r\n      <Page\r\n        middleComponent={\r\n          <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            post={post}\r\n            liked={liked}\r\n            handleUserCommented={this.handleUserCommented}\r\n            handleUserLiked={this.handleUserLiked}\r\n            handleUserUnLiked={this.handleUserUnLiked}\r\n          />\r\n        }\r\n      />\r\n    ) : (\r\n      <React.Fragment></React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\nimport { Form, Button, InputGroup, FormControl, Col } from \"react-bootstrap\";\r\n\r\nconst InLineForm = (props) => {\r\n  return (\r\n    <Form>\r\n      <Form.Row className=\"align-items-center\">\r\n        <Col className=\"mb-2\">Change {props.description}</Col>\r\n        <Col>\r\n          <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly></Form.Label>\r\n          <InputGroup className=\"mb-2\">\r\n            <FormControl\r\n              id={props.description}\r\n              placeholder={props.current}\r\n              type={props.description}\r\n              name={props.description}\r\n              onChange={props.handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"mb-2\">\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={(e) => props.handleSubmit(e, props.description)}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InLineForm;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst WarningPopup = (props) => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Are you sure you want to delete your account?\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Warning: deleting your account is permanent. You will not be able to\r\n          recover your account after deleting.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={props.onDelete}>\r\n          Delete account\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={props.onClose}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WarningPopup;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { checkEmail, checkPassword } from \"../Components/CheckValidInput\";\r\nimport { logout } from \"../Actions/AuthenticationAction\";\r\nimport InLineForm from \"../Components/InLineForm\";\r\nimport Page from \"../Components/Page\";\r\nimport API from \"../api/api\";\r\nimport WarningPopup from \"../Components/WarningPopup\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    privateProfile: false,\r\n    success: \"\",\r\n    error: \"\",\r\n    popup: false,\r\n  };\r\n\r\n  changeAttr = (evt, attr) => {\r\n    evt.preventDefault();\r\n\r\n    // check not empty\r\n    if (attr === \"\") {\r\n      this.setState({ error: attr });\r\n      return;\r\n    }\r\n\r\n    // check password\r\n    if (attr === \"password\") {\r\n      let error = checkPassword(this.state[attr]);\r\n      if (error !== \"\") {\r\n        this.setState({ error });\r\n        return;\r\n      }\r\n    }\r\n\r\n    // check email\r\n    if (attr === \"email\") {\r\n      let error = checkEmail(this.state[attr]);\r\n      if (error !== \"\") {\r\n        this.setState({ error });\r\n        return;\r\n      }\r\n    }\r\n\r\n    API({\r\n      method: \"put\",\r\n      url: `/api/applicationUsers/${attr}`,\r\n      data: this.state[attr],\r\n      headers: {},\r\n    })\r\n      .then((response) => {\r\n        this.setState({ success: attr, error: \"\" });\r\n        console.log(\"setting state\", \"success\");\r\n\r\n        if (attr === \"username\" || attr === \"password\") {\r\n          setTimeout(\r\n            function () {\r\n              //Start the timer\r\n              this.props.logout();\r\n            }.bind(this),\r\n            1000\r\n          );\r\n          return;\r\n        }\r\n        this.props.handleChange();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ success: \"\", error: attr });\r\n      });\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    const value =\r\n      evt.target.name === \"privateProfile\"\r\n        ? evt.target.checked\r\n        : evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    });\r\n  };\r\n\r\n  deleteAccount = (evt) => {\r\n    evt.preventDefault();\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/applicationUsers`,\r\n      headers: {},\r\n    })\r\n      .then((response) => {\r\n        this.setState({ success: \"account deactivation\", error: \"\" });\r\n        this.setState({ popup: false });\r\n        setTimeout(\r\n          function () {\r\n            //Start the timer\r\n            this.props.logout();\r\n          }.bind(this),\r\n          1000\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ success: \"\", error: \"account deactivation\" });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"render state\", this.state);\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            <h1>Settings</h1>\r\n            <hr className=\"hr-line\" />\r\n            <div className=\"\">\r\n              <div>\r\n                <p>\r\n                  Note, changing these settings will redirect back to login.\r\n                </p>\r\n              </div>\r\n              <InLineForm\r\n                description=\"username\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.changeAttr}\r\n                current={this.props.meUser.username}\r\n              ></InLineForm>\r\n              <InLineForm\r\n                description=\"password\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.changeAttr}\r\n                current=\"********\"\r\n              ></InLineForm>\r\n              <Form>\r\n                <Form.Text className=\"text-muted\">\r\n                  Password must be 8-20 characters. Include numbers, letters,\r\n                  and special characters.\r\n                </Form.Text>\r\n              </Form>\r\n              <hr className=\"hr-line\" />\r\n              <InLineForm\r\n                description=\"email\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.changeAttr}\r\n                current={this.props.meUser.email}\r\n              ></InLineForm>\r\n              <InLineForm\r\n                description=\"city\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.changeAttr}\r\n                current={this.props.meUser.city}\r\n              ></InLineForm>\r\n              <InLineForm\r\n                description=\"country\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.changeAttr}\r\n                current={this.props.meUser.country}\r\n              ></InLineForm>\r\n              <Form>\r\n                <Form.Row className=\"align-items-center\">\r\n                  <Col className=\"mb-2\">Change private status</Col>\r\n                  <Col>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      className=\"mb-2 mr-sm-2\"\r\n                      id=\"inlineFormCheck\"\r\n                      label=\"privateProfile\"\r\n                      name=\"privateProfile\"\r\n                      defaultChecked={this.props.meUser.privateProfile}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={(e) => this.changeAttr(e, \"privateProfile\")}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Row>\r\n                <br></br>\r\n                {this.state.success !== \"\" ? (\r\n                  <Form.Row>\r\n                    <Col>\r\n                      <Alert variant=\"primary\" className=\"mb-2 mr-sm-2\">\r\n                        {this.state.success} changed successfully\r\n                      </Alert>\r\n                    </Col>\r\n                  </Form.Row>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n                {this.state.error !== \"\" ? (\r\n                  <Form.Row>\r\n                    <Col>\r\n                      <Alert variant=\"danger\" className=\"mb-2 mr-sm-2\">\r\n                        {this.state.error} is required\r\n                      </Alert>\r\n                    </Col>\r\n                  </Form.Row>\r\n                ) : (\r\n                  <React.Fragment></React.Fragment>\r\n                )}\r\n              </Form>\r\n            </div>\r\n            <br></br>\r\n            <hr className=\"hr-line\" />\r\n            <div className=\"center\">\r\n              <Form>\r\n                <Form.Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mb-2 mr-sm-2\"\r\n                      onClick={() => {\r\n                        this.setState({ popup: true });\r\n                      }}\r\n                    >\r\n                      Delete Account\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Row>\r\n              </Form>\r\n            </div>\r\n            <hr className=\"hr-line\" />\r\n            <div className=\"space-evenly\">\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://github.com/barbinimichael/Kick\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                About\r\n              </a>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://quiet-inlet-83310.herokuapp.com/\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                API\r\n              </a>\r\n            </div>\r\n            <WarningPopup\r\n              show={this.state.popup}\r\n              onClose={() => {\r\n                this.setState({ popup: false });\r\n              }}\r\n              onDelete={this.deleteAccount}\r\n            ></WarningPopup>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Image } from \"react-bootstrap\";\r\n\r\nimport Page from \"../Components/Page\";\r\nimport logo from \"../logo.svg\";\r\nimport API from \"../api/api\";\r\n\r\nclass CommentPage extends Component {\r\n  state = { comment: \"\", comments: [] };\r\n\r\n  componentDidMount() {\r\n    API({\r\n      method: \"get\",\r\n      url: `/api/posts/${this.props.match.params.postId}/comments`,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"comment fetch\", response);\r\n        this.setState({ comments: response.data.content });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteComment = (evt, id) => {\r\n    evt.preventDefault();\r\n    API({\r\n      method: \"delete\",\r\n      url: `/api/commentPosts/${id}`,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"comment deleted\", response);\r\n        window.location.reload(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //   <Card.Body>\r\n  //   <Card.Text>Add a button to comment and like</Card.Text>\r\n  //   </Card.Body>\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        middleComponent={\r\n          <React.Fragment>\r\n            {this.state.comments.length > 0 ? (\r\n              this.state.comments.map((comment, index) => (\r\n                <Card key={index}>\r\n                  <Card.Header>\r\n                    <Image width=\"30\" height=\"30\" variant=\"top\" src={logo} />\r\n                    {comment.username} : {comment.comment}\r\n                    {comment.username === this.props.meUser.username ? (\r\n                      <Button\r\n                        className=\"ml-auto float-right\"\r\n                        onClick={(e) => this.deleteComment(e, comment.id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    ) : (\r\n                      <React.Fragment />\r\n                    )}\r\n                  </Card.Header>\r\n                </Card>\r\n              ))\r\n            ) : (\r\n              <React.Fragment>{\"No comments\"}</React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentPage;\r\n","import React from \"react\";\r\n\r\nimport Page from \"../Components/Page\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <Page\r\n      middleComponent={\r\n        <div>\r\n          <h1>404 Error- Page Not Found</h1>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport NavigationBar from \"./Components/NavigationBar\";\r\nimport CreatePost from \"./Pages/CreatePost\";\r\nimport Home from \"./Pages/Home\";\r\nimport SignIn from \"./Pages/LogIn\";\r\nimport PrivateRoute from \"./Components/PrivateRoute\";\r\nimport Registration from \"./Pages/Registration\";\r\nimport Explore from \"./Pages/Explore\";\r\nimport Message from \"./Pages/Message\";\r\nimport Search from \"./Pages/Search\";\r\nimport UserPage from \"./Pages/UserPage\";\r\nimport FollowersPage from \"./Pages/FollowersPage\";\r\nimport InfluencersPage from \"./Pages/InfluencersPage\";\r\nimport PostPage from \"./Pages/PostPage\";\r\nimport Settings from \"./Pages/Settings\";\r\nimport CommentPage from \"./Pages/CommentPage\";\r\n\r\nimport NoMatch from \"./Components/NoMatch\";\r\nimport API from \"./api/api\";\r\nimport { login, logout } from \"./Actions/AuthenticationAction\";\r\n\r\nclass App extends Component {\r\n  state = { user: [] };\r\n\r\n  componentDidMount() {\r\n    this.getUserInfo();\r\n  }\r\n\r\n  getUserInfo = () => {\r\n    if (this.props.loggedIn) {\r\n      API({\r\n        method: \"get\",\r\n        url: \"api/applicationUsers/self\",\r\n      })\r\n        .then((response) => {\r\n          this.setState({ user: response.data });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.props.logout();\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"logged in\", this.props.loggedIn);\r\n    return (\r\n      <Router>\r\n        {this.props.loggedIn ? (\r\n          <NavigationBar meUser={this.state.user} />\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <Switch>\r\n          <PrivateRoute\r\n            path=\"/\"\r\n            exact\r\n            component={Home}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute path=\"/create-post\" exact component={CreatePost} />\r\n          <PrivateRoute path=\"/message\" exact component={Message} />\r\n          <PrivateRoute path=\"/explore\" exact component={Explore} />\r\n          <PrivateRoute\r\n            path=\"/search\"\r\n            exact\r\n            component={Search}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/user/:username\"\r\n            component={UserPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/comment/:postId\"\r\n            component={CommentPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <Route path=\"/sign-in\" exact component={SignIn} />\r\n          <Route path=\"/register\" exact component={Registration} />\r\n          <PrivateRoute\r\n            path=\"/followers/:username\"\r\n            component={FollowersPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/influencers/:username\"\r\n            component={InfluencersPage}\r\n            meUser={this.state.user}\r\n          />\r\n          <PrivateRoute path=\"/post/:postId\" component={PostPage} />\r\n          <PrivateRoute\r\n            path=\"/settings\"\r\n            component={Settings}\r\n            meUser={this.state.user}\r\n            handleChange={this.getUserInfo}\r\n          />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import history from \"../Components/History\";\r\nimport {\r\n  LOGOUT,\r\n  LOGGING_IN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_RESET,\r\n  REGISTERING,\r\n  REGISTER_SUCCESSFUL,\r\n  REGISTER_FAIL_USERNAME,\r\n  REGISTER_FAIL_EMAIL,\r\n  REGISTER_FAIL,\r\n  REGISTER_RESET,\r\n} from \"../Actions/AuthenticationAction\";\r\n\r\nconst AuthenciationReduer = (\r\n  state = {\r\n    loggingIn: false,\r\n    loggedIn: false,\r\n    error: false,\r\n    registering: false,\r\n    registered: false,\r\n    errorUsername: false,\r\n    errorEmail: false,\r\n    errorRegister: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case REGISTER_RESET:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n        errorRegister: false,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_FAIL:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n        errorRegister: true,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_FAIL_USERNAME:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: true,\r\n        errorEmail: false,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_FAIL_EMAIL:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: true,\r\n      };\r\n      break;\r\n\r\n    case REGISTERING:\r\n      state = {\r\n        ...state,\r\n        registering: true,\r\n        registered: false,\r\n      };\r\n      break;\r\n\r\n    case REGISTER_SUCCESSFUL:\r\n      state = {\r\n        ...state,\r\n        registering: false,\r\n        registered: true,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n      };\r\n      break;\r\n\r\n    case LOGOUT:\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: false,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n      };\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"Authorization\");\r\n      history.push(\"/sign-in\");\r\n      break;\r\n\r\n    case LOGIN_RESET:\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: false,\r\n      };\r\n      break;\r\n\r\n    case LOGGING_IN:\r\n      state = {\r\n        ...state,\r\n        loggingIn: true,\r\n        loggedIn: false,\r\n        error: false,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: true,\r\n        error: false,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n        errorRegister: false,\r\n      };\r\n      break;\r\n\r\n    case LOGIN_FAIL:\r\n      state = {\r\n        ...state,\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: true,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      state = {\r\n        loggingIn: false,\r\n        loggedIn: false,\r\n        error: false,\r\n        registering: false,\r\n        registered: false,\r\n        errorUsername: false,\r\n        errorEmail: false,\r\n        errorRegister: false,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default AuthenciationReduer;\r\n","import AuthenticationReducer from \"./Reducers/AuthenticationReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, AuthenticationReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  {},\r\n  applyMiddleware(logger, thunk)\r\n);\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport { persistor } from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}